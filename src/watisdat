#!/usr/bin/env node
/******************************************************************************
 * Copyright (c) 2013 Alexander Kluth <derhartmut@niwohlos.org>               *
 * Copyright (c) 2013 Sandra Bedorf <s.bedorf@gmx.de>                         *
 *                                                                            *
 * This file is part of watisdat.                                             *
 *                                                                            *
 * watisdat is free software: you can redistribute it and/or modify           *
 * it under the terms of the GNU General Public License as published by       *
 * the Free Software Foundation, either version 3 of the License, or          *
 * (at your option) any later version.                                        *
 *                                                                            * 
 * watisdat is distributed in the hope that it will be useful,                *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with watisdat.  If not, see <http://www.gnu.org/licenses/>.          *
 ******************************************************************************/
fs = require('fs');
var argv = require('optimist').argv;

Parser = require('./parser');
log = require('./log');
config = require('./config');
VirtualMachine = require('./vm');

var content;

if ((argv.version)) {
    log.message("0.1.0");
    process.exit();
}

if ((argv.help)) {
    log.message("\n Usage: watisdat (--file=FILE)\n");
    log.message(" --file=FILE - Open file to interprete");
    log.message(" --debug     - Enable debug messages");
    log.message(" --help      - Display this help");
    log.message(" --version   - Display versioning information\n");
    process.exit();
}

if ((argv.debug)) {
    config.debug = true;
}

if ((argv.file)) {
    try {
        content = fs.readFileSync(argv.file, 'utf8');
    } catch (e) {
        log.failure(e);
        process.exit();
    }
} else {
   log.warn("prompt lol");
   content = "++++++";
}

if ((argv.heap)) {
    config.vm.heap = argv.heap;
}

var parser = new Parser(content);
parser.lexer();
content = parser.parse();

var vm = new VirtualMachine();
vm.create(config.vm.heap);
vm.run(content);

